@inject ILogger<MotorcycleShowroom.Models.BMW> Logger
@model MotorcycleShowroom.Models.BMWDetailsViewModel

<div class="overlay">
    <div class="container content-container">
        <div class="row">
            <div class="col-md-6">
                <dl class="row">
                    <dt class="col-sm-4">
                        Motorcycle:
                        @Model.Bmw.Motorcycles
                    </dt>
                    <dd class="col-sm-8">
                        Description:
                        @Model.Bmw.Info
                    </dd>
                </dl>
                <!-- White Back button -->
                <a href="javascript:history.back()" class="btn btn-white btn-wider btn-hover">Back</a>
            </div>
            <div class="col-md-6">

                <div class="slideshow-container">

                    <!-- Full-width images with number and caption text -->
                    @foreach (var image in @Model.Bmw.Images)
                    {
                        <div class="mySlides">
                            
                            <img src="@Url.Action("GetImage", "Image", new { filePath = @image.FileName })" alt="Description of the image" style="width:100%">
                            
                        </div>
                    }


                    <!-- Next and previous buttons -->
                    <a class="prev" onclick="plusSlides(-1)">&#10094;</a>
                    <a class="next" onclick="plusSlides(1)">&#10095;</a>
                </div>
                <br>

                <!-- The dots/circles -->
                <div style="text-align:center">
                    <span class="dot" onclick="currentSlide(1)"></span>
                    <span class="dot" onclick="currentSlide(2)"></span>
                    <span class="dot" onclick="currentSlide(3)"></span>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Like button and heart icon moved back to their original location -->
<div class="like-heart-container">
    <button id="likeButton" class="btn-like btn-white" data-bmw-id="@Model.Bmw.Id">Like</button>
    <div class="heart-container">
        <span class="heart-icon">&hearts; <span id="countNumber" class="count-number">@Model.LikesCount</span></span>
    </div>
</div>

<style>
    /* Existing styles remain unchanged */
    .overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5); /* Dark overlay color */
        z-index: 1000; /* Ensure overlay is behind content but above header */
    }

    .content-container {
        position: relative;
        z-index: 1001;
        padding-top: 56px;
        max-height: calc(100vh - 56px); /* Set max height to viewport height minus the top padding */
        overflow-y: auto; /* Enable vertical scrolling */
        scrollbar-width: none; /* Firefox */
        -ms-overflow-style: none; /* IE and Edge */
    }

        .content-container::-webkit-scrollbar {
            display: none; /* Chrome, Safari, Opera */
        }

    .image-container {
        max-height: calc(100vh - 150px); /* Set max height for the image container to allow space for other elements */
        overflow-y: auto; /* Enable vertical scrolling */
        scrollbar-width: none; /* Firefox */
        -ms-overflow-style: none; /* IE and Edge */
        position: relative; /* Added relative positioning */
    }

        .image-container::-webkit-scrollbar {
            display: none; /* Chrome, Safari, Opera */
        }

    .like-heart-container {
       position: absolute; /* Positioned absolutely to place it outside the image container */
    top: calc(65% - 14px); /* Center vertically */
    left: 570px; /* Adjust left position as needed */
    z-index: 1002; /* Ensure it's above the overlay */
    display: flex; /* Used flexbox for horizontal alignment */
    align-items: center; /* Center align items vertically */
    }

    .heart-container {
        font-size: 28px; /* Increased font size for the heart */
        color: white; /* Heart color */
    }

    .heart-icon {
        margin-left: 5px;
        color: white;
    }

    .btn-like.btn-black {
         background-color: black;
    color: white;
    margin-right: 10px;
    }

    .liked {
        color: red;
    }

    #countNumber {
        color: white; /* Counter color */
    }

</style>

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script>
    
    let slideIndex = 0;
    showSlides(slideIndex);

    // Next/previous controls
    function plusSlides(n) {
        console.log("N=%s", n)
        showSlides(slideIndex += n);
    }

    // Thumbnail image controls
    function currentSlide(n) {
        showSlides(slideIndex = n);
    }

    function showSlides(n) {
        let i;
        let slides = document.getElementsByClassName("mySlides");
        let dots = document.getElementsByClassName("dot");
        if (n > slides.length) { slideIndex = 1 }
        if (n < 1) { slideIndex = slides.length }
        for (i = 0; i < slides.length; i++) {
            slides[i].style.display = "none";
        }
        for (i = 0; i < dots.length; i++) {
            dots[i].className = dots[i].className.replace(" active", "");
        }
        slides[slideIndex - 1].style.display = "block";
        dots[slideIndex - 1].className += " active";
    }
</script>
<script>
    $(document).ready(function () {
        $('#likeButton').click(function (e) {
            e.preventDefault();
            var bmwId = $(this).data('bmw-id');
            var likeButton = $(this); // Reference to the like button
            var heartIcon = $('.heart-icon'); // Reference to the heart icon

            $.ajax({
                url: '/BMWs/Like',
                method: 'POST',
                data: { BMWId: bmwId },
                success: function (response) {
                    if (response.success) {
                        console.log(response.message);
                        $('#countNumber').text(response.likeCount); // Update the like count on the page
                        likeButton.removeClass('btn-white').addClass('btn-black'); // Change the button style
                        likeButton.text('Liked'); // Change the text of the like button
                        heartIcon.addClass('liked'); // Add the 'liked' class to the heart icon
                    } else {
                        console.error('Error:', response.message);
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Error:', error);
                }
            });
        });

        $('#unlikeButton').click(function (e) {
            e.preventDefault();
            var bmwId = $(this).data('bmw-id');
            var likeButton = $('#likeButton'); // Reference to the like button
            var heartIcon = $('.heart-icon'); // Reference to the heart icon

            $.ajax({
                url: '/BMWs/Unlike',
                method: 'POST',
                data: { BMWId: bmwId },
                success: function (response) {
                    if (response.success) {
                        console.log(response.message);
                        $('#countNumber').text(response.likeCount); // Update the like count on the page
                        likeButton.removeClass('btn-black').addClass('btn-white'); // Change the button style
                        likeButton.text('Like'); // Change the text of the like button
                        heartIcon.removeClass('liked'); // Remove the 'liked' class from the heart icon
                    } else {
                        console.error('Error:', response.message);
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Error:', error);
                }
            });
        });
    });




             </script>
